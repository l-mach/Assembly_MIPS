2 - SUBTRAÇÃO
    Caso 1:
		Entrada:
			2
			1
		Saída:
			2 - 1 = 1
	Caso 2:
		Entrada:
			5
			5
		Saída:
			5 - 5 = 0
	Caso 3:
		Entrada:
			0
			3
		Saída:
			0 - 3 = -3
	Caso 4:
		Entrada:
			5
			-5
		Saída:
			5 - -5 = 10
	Caso 5:
		Entrada:
			-32768
			1999999999
		Saída:
			-32768 - 1999999999 = -2000032767
			
3 - MULTIPLICACAO
	Caso 1:
		Entrada:
			4
			2
		Saída:
			4 * 2 = 8
	Caso 2:
		Entrada:
			8
			0
		Saída:
			8 * 0 = 0
	Caso 3:
		Entrada: 
			80
			2000000000
		Saída:
			ERRO: Valor invalido! Os argumentos devem ser estar entre -32767 e 32767.
	Caso 4:
		Entrada:
			-500
			2
		Saída:
			-500 * 2 = -1000
	Caso 5:
		Entrada:
			-1000
			-2000
		Saída:
			-1000 * -2000 = 2000000
4 - DIVISÃO
	Caso 1:
		Entrada:
			4
			2
		Saída:
			4 / 2 = 2
			> Resto: 0
	Caso 2:
		Entrada:
			56
			0
		Saída:
			ERRO: Valor invalido! Este argumento deve ser diferente de zero.
	Caso 3:
		Entrada:
			123
			450
		Saída:
			123 / 450 = 0
			> Resto: 123
	Caso 4:
		Entrada:
			-30
			13
		Saída:
			-30 / 13 = -2
			> Resto: -4
	Caso 5:
		Entrada:
			7382078
			372389
		Saída:
			7382078 / 372389 = 19
			> Resto: 306687
5 - POTÊNCIA
	Caso 1:
		Entrada:
		 	5
		 	0
		Saída:
			5^0 = 1
	Caso 2:
		Entrada:
			10
			2
		Saída:
			10^2 = 100
	Caso 3:
		Entrada:
			10
			-1
		Saída:
			ERRO: Valor invalido! O(s) argumento(s) não deve(m) ser negativo(s).
	Caso 4:
		Entrada:
			-1
			10
		Saída:
			-1^10 = 1

	Caso 5:
		Entrada:
			-1
			11
		Saída:
			-1^11 = -1
	Caso 6:
		Entrada:
			5
			1
		Saída:
			5^1 = 5
			
6 - RAIZ QUADRADA
	Caso 1:
		Entrada:
			4
		Saída:
			sqrt(4) = 2
	Caso 2:
		Entrada:
			100000000
		Saída:
			sqrt(100000000) = 10000
	Caso 3:
		Entrada:
			-50
		Saída:
			ERRO: Valor invalido! O(s) argumento(s) não deve(m) ser negativo(s).
	Caso 4:
		Entrada:
			120
		Saída:
			sqrt(120) = 10 
	Caso 5:
		Entrada:
			0
		Saída:
			sqrt(0) = 0

7 - TABUADA
	Caso 1:
		Entrada:
			5
		Saída:
			> Tabuada de 5:
			5 x 0 = 0
			5 x 1 = 5
			5 x 2 = 10
			5 x 3 = 15
			5 x 4 = 20
			5 x 5 = 25
			5 x 6 = 30
			5 x 7 = 35
			5 x 8 = 40
			5 x 9 = 45
			5 x 10 = 50

	Caso 2:
		Entrada:
			-1
		Saída:
			ERRO: Valor invalido! O(s) argumento(s) não deve(m) ser negativo(s).
	Caso 3:
		Entrada:
			100
		Saída:
			> Tabuada de 100:
			100 x 0 = 0
			100 x 1 = 100
			100 x 2 = 200
			100 x 3 = 300
			100 x 4 = 400
			100 x 5 = 500
			100 x 6 = 600
			100 x 7 = 700
			100 x 8 = 800
			100 x 9 = 900
			100 x 10 = 1000
	Caso 4:
		Entrada:
			107374182
		Saída:
			> Tabuada de 107374182:
			107374182 x 0 = 0
			107374182 x 1 = 107374182
			107374182 x 2 = 214748364
			107374182 x 3 = 322122546
			107374182 x 4 = 429496728
			107374182 x 5 = 536870910
			107374182 x 6 = 644245092
			107374182 x 7 = 751619274
			107374182 x 8 = 858993456
			107374182 x 9 = 966367638
			107374182 x 10 = 1073741820

	Caso 5:
		Entrada:
			107374183
		Saída:
			ERRO: Valor invalido! O argumento precisa ser menor ou igual a 107374182

8 - IMC
	Caso 1:
		Entrada:
			Altura:0
			Peso:30 (não será digitado pois, já da erro)
		Saída:
			ERRO: Valor invalido! Este argumento deve ser diferente de zero.
	Caso 2:
		Entrada:
			Altura:1.78
			Peso:0
		Saída:
			IMC: 0.0
	Caso 3:
		Entrada: 
			Altura: 2.0
			Peso:-50
		Saída:
			ERRO: Valor invalido! O(s) argumento(s) não deve(m) ser negativo(s).
	Caso 4:
		Entrada:
			Altura: 1.78
			Peso: 65
		Saída:
			IMC: 20.515087 
	Caso 5:
		Entrada:
			Altura: 2000000000
			Peso: 2000000000
		Saída:
			IMC: 5.0E-10
			
9 - FATORIAL
	Caso 1:
		Entrada:
			4
		Saída:
			4! = 24
	Caso 2:
		Entrada:
			-6
		Saída:
			ERRO: Valor invalido! O argumento deve estar entre 0 e 19.
	Caso 3:
		Entrada:
			20
		Saída:
			ERRO: Valor invalido! O argumento deve estar entre 0 e 19.
	Caso 4:
		Entrada:
			12
		Saída:
			12! = 479001600
	Caso 5:
		Entrada:
			7
		Saída:
			7! = 5040	
			
10 - FIBONACCI
    Caso 1:
        Entrada:
            1
            10
        Saída:
            > Numeros de Fibonacci 1 a 10:
            1 1 2 3 5 8 13 21 34 55
    Caso 2:
        Entrada:
            -1
            10
        Saída:
            ERRO: Valor invalido! O(s) argumento(s) não deve(m) ser negativo(s).
    Caso 3:
        Entrada:
            3
            2
        Saída:
            ERRO: O segundo valor deve ser maior do que o primeiro!
    Caso 4:
        Entrada:
            1
            10
        Saída:
            > Numeros de Fibonacci 5 a 10:
            5 8 13 21 34 55
    Caso 5:
        Entrada:
            1
            10
        Saída:
            > Numeros de Fibonacci 20 a 30:
            6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 9227465 14930352 24157817 39088169 63245986 102334155
